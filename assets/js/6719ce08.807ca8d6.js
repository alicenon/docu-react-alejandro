"use strict";(self.webpackChunkmy_doc_site_ecommerce_react=self.webpackChunkmy_doc_site_ecommerce_react||[]).push([[1852],{9007:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=n(4848),r=n(8453);const s={},i="Ecommerce-Serverless-aws",a={id:"tutorial-React-apps/Ecommerce-React-App",title:"Ecommerce-Serverless-aws",description:"an example of how to build and run applications without having to manage infrastructure (Serverless Architecture) in the AWS cloud",source:"@site/docs/tutorial-React-apps/02-Ecommerce-React-App.md",sourceDirName:"tutorial-React-apps",slug:"/tutorial-React-apps/Ecommerce-React-App",permalink:"/docu-react-alejandro/docs/tutorial-React-apps/Ecommerce-React-App",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-React-apps/02-Ecommerce-React-App.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Obtener las credenciales para conectarse con firebase",permalink:"/docu-react-alejandro/docs/tutorial-React-apps/installation"},next:{title:"Desarrollo de soluciones para Microsoft Azure",permalink:"/docu-react-alejandro/docs/category/desarrollo-de-soluciones-para-microsoft-azure"}},l={},c=[{value:"1. Lets start first with cloning the repository",id:"1-lets-start-first-with-cloning-the-repository",level:2},{value:"2. To deploy run the following commands",id:"2-to-deploy-run-the-following-commands",level:2},{value:"3. BACKEND",id:"3-backend",level:2},{value:"4. FRONTEND",id:"4-frontend",level:2},{value:"Installing/Deploying the retail store",id:"installingdeploying-the-retail-store",level:2},{value:"1. Let start first with cloning the repository",id:"1-let-start-first-with-cloning-the-repository",level:2},{value:"\u2699\ufe0f <em>BACKEND</em>",id:"\ufe0f-backend",level:2},{value:"2. To deploy run the following commands. Make sure to replace <code>&lt;REGION&gt;</code> with your desired region. In our example we are using <code>us-east-1</code>.",id:"2-to-deploy-run-the-following-commands-make-sure-to-replace-region-with-your-desired-region-in-our-example-we-are-using-us-east-1",level:2},{value:"\ud83d\udd37 <em>FRONTEND</em>",id:"-frontend",level:2},{value:"\ud83d\udee0 Tools",id:"-tools",level:2},{value:"visualize ecommerce with Amazon CloudFront to deliver content with lower latency!",id:"visualize-ecommerce-with-amazon-cloudfront-to-deliver-content-with-lower-latency",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"ecommerce-serverless-aws",children:"Ecommerce-Serverless-aws"}),"\n",(0,o.jsx)(t.p,{children:"an example of how to build and run applications without having to manage infrastructure (Serverless Architecture) in the AWS cloud"}),"\n",(0,o.jsx)(t.h2,{id:"1-lets-start-first-with-cloning-the-repository",children:(0,o.jsx)(t.a,{href:"#1-let-start-first-with-cloning-the-repository",children:"1. Lets start first with cloning the repository"})}),"\n",(0,o.jsx)(t.h2,{id:"2-to-deploy-run-the-following-commands",children:(0,o.jsx)(t.a,{href:"#2-to-deploy-run-the-following-commands",children:"2. To deploy run the following commands"})}),"\n",(0,o.jsx)(t.h2,{id:"3-backend",children:(0,o.jsx)(t.a,{href:"#%EF%B8%8F-backend",children:"3. BACKEND"})}),"\n",(0,o.jsx)(t.h2,{id:"4-frontend",children:(0,o.jsx)(t.a,{href:"#-frontend",children:"4. FRONTEND"})}),"\n",(0,o.jsx)(t.h1,{id:"application-architecture",children:"Application architecture"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://epsagon.awsworkshop.io/images/welcome/architecture.png",alt:"arquitectura"})}),"\n",(0,o.jsx)(t.h2,{id:"installingdeploying-the-retail-store",children:"Installing/Deploying the retail store"}),"\n",(0,o.jsx)(t.h2,{id:"1-let-start-first-with-cloning-the-repository",children:"1. Let start first with cloning the repository"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/epsagon/retail-store-workshop.git\r\ncd retail-store-workshop  \n"})}),"\n",(0,o.jsxs)(t.p,{children:["first of all add the lib in ",(0,o.jsx)(t.code,{children:"<requiriments.txt>"})," ",(0,o.jsx)(t.code,{children:"urllib3==1.26.6"})," is a Python library commonly used to make HTTP requests.*"]}),"\n",(0,o.jsxs)(t.h2,{id:"\ufe0f-backend",children:["\u2699\ufe0f ",(0,o.jsx)(t.em,{children:"BACKEND"})]}),"\n",(0,o.jsxs)(t.h2,{id:"2-to-deploy-run-the-following-commands-make-sure-to-replace-region-with-your-desired-region-in-our-example-we-are-using-us-east-1",children:["2. To deploy run the following commands. Make sure to replace ",(0,o.jsx)(t.code,{children:"<REGION>"})," with your desired region. In our example we are using ",(0,o.jsx)(t.code,{children:"us-east-1"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-plaintext",children:"us-east-1\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"cd backend\r\nsudo pip3 install boto3\r\nnpm install\r\nnpm install -g serverless\r\nsls deploy --region <REGION> \n"})}),"\n",(0,o.jsx)(t.p,{children:"Upon successful deployment, we can see the following output:"}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsxs)(t.em,{children:["Note: If there are any errors, don't worry, try modifying line 15 of Serverless.yml. Check that you have ",(0,o.jsx)(t.code,{children:"runtime: python3.9"})," and not ",(0,o.jsx)(t.code,{children:"<runtime: python3.7>"})," or whatever you have set"]})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://epsagon.awsworkshop.io/images/prerequisites/sls_deploy.png",alt:"imagen2"})}),"\n",(0,o.jsxs)(t.ol,{start:"3",children:["\n",(0,o.jsx)(t.li,{children:"Make sure to copy the endpoint, because we can use it soon.\r\nNow let\u2019s create some items in our stock"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"python update_db.py 4 <REGION>\n"})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"update_db.py"})," script puts items (in this case 4) into our DynamoDB. Make sure to use the same region as before."]}),"\n",(0,o.jsxs)(t.h2,{id:"-frontend",children:["\ud83d\udd37 ",(0,o.jsx)(t.em,{children:"FRONTEND"})]}),"\n",(0,o.jsxs)(t.ol,{start:"3",children:["\n",(0,o.jsx)(t.li,{children:"\"Change to the 'frontend' directory, globally install Yarn and 'scottyjs', then use Yarn to install the frontend project dependencies.\""}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"cd ../frontend\r\nnpm install -g yarn scottyjs\r\nyarn install\n"})}),"\n",(0,o.jsx)(t.p,{children:"4.Now, let\u2019s copy the endpoint to the file frontend/src/config.js:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://epsagon.awsworkshop.io/images/prerequisites/configjs.png",alt:"arquitectura"})}),"\n",(0,o.jsx)(t.p,{children:"5.Make sure to change only to hostname part, and leave the string ending with /dev."}),"\n",(0,o.jsx)(t.p,{children:"Now we can deploy our frontend:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"npm run build\r\nscotty --nocdn --spa --source ./build -b <BUCKET_NAME> -r <REGION>\r\n\n"})}),"\n",(0,o.jsx)(t.p,{children:"in this case we use"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"npm run build\r\naws s3 cp ./build s3://catalog-shop-dev-serverlessdeploymentbucket-ijfqa9bzlgwu --recursive\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Instead of ",(0,o.jsx)(t.code,{children:"<BUCKET_NAME>"})," choose a unique name for the S3 bucket that will be created for the website. It can be any name! In the example, we are ",(0,o.jsx)(t.code,{children:"using observability-workshop-ranrib"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["Type in the region as the same ",(0,o.jsx)(t.code,{children:"<REGION>"})," you\u2019ve used before"]}),"\n",(0,o.jsx)(t.h2,{id:"-tools",children:"\ud83d\udee0 Tools"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://aws.amazon.com/cloudfront/",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/Amazon_CloudFront-FF9900?style=for-the-badge&logo=amazon-cloudfront",alt:"Amazon CloudFront"})}),"\r\n",(0,o.jsx)(t.a,{href:"https://aws.amazon.com/s3/",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/Amazon_S3-FF9900?style=for-the-badge&logo=amazon-s3",alt:"Amazon S3"})}),"\r\n",(0,o.jsx)(t.a,{href:"https://aws.amazon.com/lambda/",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/AWS_Lambda-FF9900?style=for-the-badge&logo=amazon-aws",alt:"AWS Lambda"})})]}),"\n",(0,o.jsx)(t.h2,{id:"visualize-ecommerce-with-amazon-cloudfront-to-deliver-content-with-lower-latency",children:"visualize ecommerce with Amazon CloudFront to deliver content with lower latency!"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://dclqwvpm3pyr3.cloudfront.net",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/ver_sitio_web-FF9900?style=for-the-badge&logo=amazon-aws&logoColor=white&labelColor=24292E&logoWidth=40&logoHeight=40",alt:"web-site"})})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(6540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);