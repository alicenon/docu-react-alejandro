"use strict";(self.webpackChunkmy_doc_site_ecommerce_react=self.webpackChunkmy_doc_site_ecommerce_react||[]).push([[2395],{6262:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var s=a(4848),o=a(8453);const c={sidebar_label:"DB-CHINOOK"},l="DB-CHINOOK",i={id:"BASES-DE-DATOS/DB-CHINOOK 14baa0187ce2807aafa2edeede32223b",title:"DB-CHINOOK",description:"Tipo: Pr\xe1ctica",source:"@site/docs/BASES-DE-DATOS/DB-CHINOOK 14baa0187ce2807aafa2edeede32223b.md",sourceDirName:"BASES-DE-DATOS",slug:"/BASES-DE-DATOS/DB-CHINOOK 14baa0187ce2807aafa2edeede32223b",permalink:"/docu-react-alejandro/docs/BASES-DE-DATOS/DB-CHINOOK 14baa0187ce2807aafa2edeede32223b",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/BASES-DE-DATOS/DB-CHINOOK 14baa0187ce2807aafa2edeede32223b.md",tags:[],version:"current",frontMatter:{sidebar_label:"DB-CHINOOK"},sidebar:"tutorialSidebar",previous:{title:"Ejercicio_Crear_BD_Empresa",permalink:"/docu-react-alejandro/docs/BASES-DE-DATOS/02Ejercicio-Crear-DB-Empresa-DDL"},next:{title:"PROGRAMACION",permalink:"/docu-react-alejandro/docs/category/programacion"}},r={},d=[];function t(e){const n={a:"a",code:"code",h1:"h1",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"db-chinook",children:"DB-CHINOOK"}),"\n",(0,s.jsxs)(n.p,{children:["Tipo: Pr\xe1ctica\nMaterias: BASES DE DATOS (",(0,s.jsx)(n.a,{href:"https://www.notion.so/BASES-DE-DATOS-11aaa0187ce281c59945cb0546646ddc?pvs=21",children:"https://www.notion.so/BASES-DE-DATOS-11aaa0187ce281c59945cb0546646ddc?pvs=21"}),")\nStatus: In progress"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"image-Photoroom.png",src:a(7784).A+"",width:"910",height:"796"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Selecciona las canciones (track) cuyo t\xedtulo (name) empieza por la misma letra que el nombre\nde su compositor (composer)"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Haz un listado de canciones. El listado tendr\xe1 una columna c\xf3digo y el t\xedtulo (nombre). El\nc\xf3digo es un campo que vamos a generar nosotros y ser\xe1n las 3 \xfaltimas posiciones de la\nduraci\xf3n de la canci\xf3n y las 4 primeras del t\xedtulo en may\xfasculas."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Selecciona las playlist cuyo nombre contenga Music."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Selecciona las canciones de g\xe9neros Pop, Rock y Metal, cuya duraci\xf3n sea superior a\n300000 milisegundos y cuyo compositor empiece por la letra A o V."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Selecciona los clientes que sean una compa\xf1\xeda (el campo compa\xf1\xeda es no nulo). De cada\ncliente veremos el nombre, el correo y generamos un campo password que ser\xe1n los 4\nprimeros caracteres del apellido, en may\xfasculas, los 3 primeros del c\xf3digo postal y los 3\nprimeros de la ciudad (en may\xfasculas)"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Muestra los artistas cuyo nombre tenga m\xe1s de 10 caracteres."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca un listado de \xe1lbumes de Led Zeppelin e Iron Maiden cuyo t\xedtulo contenga un 1 o un 2."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca un listado de facturas (INVOICE) emitidas en los 3 primeros meses de cualquier a\xf1o y\ncuyo pa\xeds sea USA."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca un listado de facturas (INVOICE) emitidas entre el 1 de enero de 2011 y el 30 de junio de\n2013 y cuyo pa\xeds sea Espa\xf1a."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca un listado de los distintos pa\xedses que hayan tenido alguna factura de m\xe1s de 5\u20ac."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca un listado de los distintos pa\xedses y las distintas ciudades que hayan tenido alguna\nfactura. El listado debe salir ordenado por pa\xeds de forma descendente y por ciudad de forma\nascendente."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca una lista de las canciones cuya direcci\xf3n es un n\xfamero par."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca un listado de facturas para las que entre hoy y la fecha de factura hayan pasado m\xe1s\nde 150 meses."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca una lista de las facturas que se hacen en la 2\xaa quincena de cada mes. Ordenalas por\nimporte descendente y por ciudad ascendente."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca una lista de los \xe1lbumes cuyo t\xedtulo tenga un n\xfamero impar de letras."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca una lista de los \xe1lbumes de Metallica cuyo nombre contenga la palabra All o la palabra\nLoad."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca una lista de las canciones. Saca el nombre y el precio en euros y en d\xf3lares (cambio\n1,04). Pon alias a los campos. Saca s\xf3lo aquellas canciones cuyo mediatype es MPEG audio le."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca una lista de los distintos compositores cuyo formato de canci\xf3n es MPEG audio le y\ncuyo g\xe9nero es Latin."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Haz una lista de canciones que ocupen entre 4.000.000 y 6.000.000 Kb y cuyo\ncompositor contenga en el nombre las letras A y O pero no sean la letra por la que empieza su\nnombre."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca una lista de los distintos compositores, junto con la longitud de su nombre, que tienen\nuna canci\xf3n que contiene la palabra Love."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Saca una lista de canciones. Queremos ver su nombre y al lado un campo que ponga\nLARGO (nombre de la canci\xf3n m\xe1s de 20 caracteres) o corto (otro caso). (Investiga y usa la\ncl\xe1usula CASE en las Selects en Oracle)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"image-Photoroom_(1).png",src:a(4055).A+"",width:"730",height:"251"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Haz una lista de las facturas sacando la fecha, el importe y al lado un campo que las\ncualique en CARAS (m\xe1s de 8\u20ac), NORMALES (entre 4\u20ac y 8\u20ac) y BARATAS (menos de 4\u20ac). S\xf3lo\npara facturas en USA y Canada."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"image-Photoroom (2).png",src:a(8374).A+"",width:"430",height:"299"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Haz una lista de empleados con 3 columnas: nombre del empleado, d\xedas que han pasado\ndesde que naci\xf3 hasta que le contrataron y d\xedas que han pasado desde que le contrataron\nhasta ahora."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Haz una lista de clientes con nombre, apellidos y la compa\xf1\xeda. Si la compa\xf1\xeda es nula, que\nponga \u201cCliente Persona F\xedsica\u201d. No se puede utilizar el CASE."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"image-Photoroom (3).png",src:a(5693).A+"",width:"787",height:"251"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Haz una lista de clientes con nombre, apellidos. El nombre lo queremos relleno con * por la\nderecha hasta 50 posiciones y el apellido con & hasta 30 posiciones por la izquierda"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"image-Photoroom (4).png",src:a(6580).A+"",width:"783",height:"189"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- 1. Selecciona las canciones (track) cuyo t\xedtulo (name) empieza por la misma letra que el nombre\n-- de su compositor (composer)\nSELECT * FROM TRACK;\nSELECT NAME , SUBSTR(NAME, 1,1) AS PRIMERALETRA FROM TRACK ;\n--*********************PRIMERA FORMA**********************************************\nSELECT NAME, COMPOSER FROM TRACK WHERE SUBSTR(NAME, 1,1) = SUBSTR(COMPOSER, 1,1) ;\n--*********************SEGUNDA FORMA**********************************************\nSELECT NAME\nFROM TRACK\nWHERE \n    NAME IS NOT NULL \n    AND COMPOSER IS NOT NULL\n    AND UPPER(SUBSTR(NAME, 1, 1)) = UPPER(SUBSTR(COMPOSER, 1, 1));\n--********************TERCERA FORMA ***********************************************   \nSELECT NAME\nFROM TRACK\nWHERE \n    UPPER(SUBSTR(NAME, 1, 1)) = UPPER(SUBSTR(COMPOSER, 1, 1));\n\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- 2. Haz un listado de canciones. El listado tendr\xe1 una columna c\xf3digo y el t\xedtulo (nombre). El\n-- c\xf3digo es un campo que vamos a generar nosotros y ser\xe1n las 3 \xfaltimas posiciones de la\n-- duraci\xf3n de la canci\xf3n y las 4 primeras del t\xedtulo en may\xfasculas.\n\n--******************PRIMERA FORMA ****************************************************\n\nSELECT SUBSTR(MILLISECONDS,-3) || '' || UPPER(SUBSTR(NAME,1,4)), NAME, MILLISECONDS FROM TRACK;\n\n--******************SEGUNDA FORMA LPAD para rellenar con ceros:***********************\n\nSELECT SUBSTR(LPAD(TO_CHAR(MILLISECONDS), 3, '0'), -3) || UPPER(SUBSTR(NAME, 1, 4)) AS CODE,\n       NAME,\n       MILLISECONDS\nFROM TRACK;\n\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"--3. Selecciona las playlist cuyo nombre contenga Music.\nSELECT * FROM PLAYLIST;\n--*******************SOLUCION 1 *********************************\nSELECT * FROM PLAYLIST WHERE NAME LIKE 'Music';\n--*******************SOLUCION 2 *********************************\nSELECT * FROM PLAYLIST WHERE NAME = 'Music'\n\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- 4. Selecciona las canciones de g\xe9neros Pop, Rock y Metal, cuya duraci\xf3n sea superior a\n--300000milisegundos y cuyo compositor empiece por la letra A o V.\nSELECT * FROM GENRE;\n-- ******************SOLUCION  1 ********************************** \nSELECT * FROM GENRE WHERE NAME  IN('Pop', 'Rock', 'Metal');\n--*******************SOLECION 2 ***********************************\nSELECT * FROM GENRE WHERE NAME= 'Pop' OR NAME = 'Rock' OR NAME = 'Metal';\n\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"--  5. Selecciona los clientes que sean una compa\xf1\xeda (el campo compa\xf1\xeda es no nulo). De cada\n--  cliente veremos el nombre, el correo y generamos un campo password que ser\xe1n los 4\n--  primeros caracteres del apellido, en may\xfasculas, los 3 primeros del c\xf3digo postal y los 3\n--  primeros de la ciudad (en may\xfasculas).\nSELECT * FROM CUSTOMER;\n\nSELECT * FROM CUSTOMER;\nSELECT FIRSTNAME || ' - ' || LASTNAME AS \"NOMBRE-COMPLETO\", EMAIL AS \"CORREO\", POSTALCODE, CITY, \nUPPER(SUBSTR(LASTNAME,1,4)) || '' || UPPER(SUBSTR(POSTALCODE, 1, 3)) || '' || UPPER(SUBSTR(CITY,1,3)) AS \"PASSWORD\"\nFROM CUSTOMER\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- 6. Muestra los artistas cuyo nombre tenga m\xe1s de 10 caracteres.\nSELECT * FROM ARTIST;\nSELECT * FROM ARTIST WHERE LENGTH(NAME) = 10;\n\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"--  7. Saca un listado de \xe1lbumes de Led Zeppelin e Iron Maiden cuyo t\xedtulo contenga un 1 o un 2.\nSELECT * FROM ALBUM;\nSELECT * FROM ARTIST WHERE NAME = 'Iron Maiden';\n--ORDERNO PARA VER SEPARADOS LOS NOMBRES DE AMBOS.\n--*********************************SOLUCION 1 ****************************************\nSELECT TITLE , NAME,ARTIST.ARTISTID\nFROM ALBUM\nINNER JOIN ARTIST ON ALBUM.ARTISTID = ARTIST.ARTISTID\nWHERE ARTIST.NAME LIKE 'Iron Maiden' OR ARTIST.NAME LIKE 'Led Zeppelin' ORDER BY ARTIST.NAME  DESC;\n--*********************************SOLUCION 2 ****************************************\nSELECT TITLE , NAME,ARTIST.ARTISTID\nFROM ALBUM\nINNER JOIN ARTIST ON ALBUM.ARTISTID = ARTIST.ARTISTID\nWHERE ARTIST.NAME IN ('Iron Maiden','Led Zeppelin' ) ORDER BY NAME DESC;\n\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"--  8. Saca un listado de facturas (INVOICE) emitidas en los 3 primeros meses de cualquier a\xf1o y\n--  cuyo pa\xeds sea USA.\nSELECT * FROM INVOICE;\n\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},7784:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/image-Photoroom-47b7f20223232bc940a1a89b0229462a.png"},4055:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/image-Photoroom_(1)-af46450990654f192f6d0889a2c00189.png"},8374:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/image-Photoroom_(2)-a5ddf00398f3f95727718505aeca976e.png"},5693:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/image-Photoroom_(3)-6c6f92611de0d4130a2eda9cb38dbb0d.png"},6580:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/image-Photoroom_(4)-b0302bb6246a6b71705c4a523d5b9bf8.png"},8453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>i});var s=a(6540);const o={},c=s.createContext(o);function l(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);